name: CI checks

on: [pull_request]

jobs: 
  ESLint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Cache Node.js dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Cache babel-eslint
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-@babel/eslint-parser-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-@babel/eslint-parser-
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install dependencies
        run: npm install
      - name: Install @babel/eslint-parser
        run: npm install --save-dev @babel/eslint-parser
      - name: Install @babel/core
        run: npm install --save-dev @babel/core
      - name: Lint JavaScript files
        run: npm run lint

  PyLint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Cache Python dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pylint
    - name: Analysing the code with pylint
      run: |
        pylint --ignore=manage.py --disable=R0911 $(git ls-files '*.py')

  Tests:
    needs: pylint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest
    - name: Run docker compose up
      run: docker compose up -d
    - name: Wait for services to start
      run: sleep 15
    - name: Blackbox tests
      run: pytest blackbox_tests.py
    - name: Component tests
      run: pytest component_tests.py
    - name: student_view - unit tests
      run: pytest student_view/tests.py
    - name: instructor_view - unit tests
      run: pytest instructor_view/tests.py